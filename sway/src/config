# Set block {{{

# Mod key
set $mod Mod4


# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l


# Terminal emulator
#set $term ~/tmp/alacritty-debug
set $term wezterm

# Scripts directory
set $scripts ~/.local/bin/sway/scripts


# Menu
set $menu exec alacritty --class launcher --option window.dimensions.columns=30 \\
    window.dimensions.lines=20 --command $scripts/launcher.sh
# }}}


# IO configuration {{{

set $wallpaper_full_path $XDG_DATA_HOME/sway/bg.jpg
output eDP-1 position 0,1080 bg $wallpaper_full_path stretch
output HDMI-A-2 position 0,0 bg $wallpaper_full_path stretch

input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout us,ru
    xkb_options "grp:win_space_toggle, caps:ctrl_modifier"
}

input * tap enabled

# }}}


# Idle configuration {{{

exec swayidle \
    timeout 300 'lock' \
    timeout 600 'swaymsg "output * dpms off"' \
        resume 'swaymsg "output * dpms on"'

# }}}


# For window event handlers {{{
for_window [app_id="launcher"] floating enable, border none
for_window [title="countdown"] floating enable
for_window [title="mpv"] floating enable, border none
# }}}


# Key bindings {{{

bindsym --to-code {

    # start a terminal
    # $mod+Return exec DRI_PRIME=1 $term
    $mod+Return exec $term

    # kill focused window
    $mod+Shift+q kill

    # start your launcher
    $mod+d exec $menu

    # reload the configuration file
    $mod+Shift+c reload

    # Move your focus around
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right

    # or use $mod+[up|down|left|right]
    $mod+Left focus left
    $mod+Down focus down
    $mod+Up focus up
    $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right

    # ditto, with arrow keys
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right

    # switch to workspace
    $mod+1 workspace 1:term
    $mod+2 workspace 2:www
    $mod+3 workspace 3:chat
    $mod+4 workspace 4
    $mod+5 workspace 5
    $mod+6 workspace 6
    $mod+7 workspace 7
    $mod+8 workspace 8
    $mod+9 workspace 9
    $mod+0 workspace 10

    # move focused container to workspace
    $mod+Shift+1 move container to workspace 1:term
    $mod+Shift+2 move container to workspace 2:www
    $mod+Shift+3 move container to workspace 3:chat
    $mod+Shift+4 move container to workspace 4
    $mod+Shift+5 move container to workspace 5
    $mod+Shift+6 move container to workspace 6
    $mod+Shift+7 move container to workspace 7
    $mod+Shift+8 move container to workspace 8
    $mod+Shift+9 move container to workspace 9
    $mod+Shift+0 move container to workspace 10

    #move focused workspace between monitors
    $mod+Ctrl+j move workspace to output down
    $mod+Ctrl+k move workspace to output up

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+b splith
    $mod+v splitv

    # Switch the current container between different layout styles
    $mod+s layout stacking
    $mod+w layout tabbed
    $mod+e layout toggle split

    # Make the current focus fullscreen
    $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    $mod+Shift+space floating toggle

    # Toggle the current window sticky
    $mod+Ctrl+space sticky toggle

    # Swap focus between the tiling area and the floating area
    $mod+t focus mode_toggle

    # move focus to the parent container
    $mod+a focus parent

    # Move the currently focused window to the scratchpad
    $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    $mod+minus scratchpad show

    # Switch to resize mode
    $mod+r mode "resize"

    # Volume control
    XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

    # Brightness control
    XF86MonBrightnessUp exec brightnessctl set 5%+
    XF86MonBrightnessDown exec brightnessctl set 5%-

    # Screen lock
    $mod+Ctrl+l exec lock

    # Hiding/showing waybar
    $mod+x exec $scripts/bar-toggle.sh

    $mod+g exec $scripts/win-swap.py

    # Screenshot (experimental feature)
    $mod+p exec $scripts/screenshot.sh
    $mod+shift+p exec $scripts/screenshot.sh win

    $mod+u nop swapped
}

# mouse button for dragging.
floating_modifier $mod normal

mode "resize" {
    bindsym --to-code {

        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        $left resize shrink width 10px
        $down resize grow height 10px
        $up resize shrink height 10px
        $right resize grow width 10px

        # ditto, with arrow keys
        Left resize shrink width 10px
        Down resize grow height 10px
        Up resize shrink height 10px
        Right resize grow width 10px

        # return to default mode
        Return mode "default"
        Escape mode "default"
    }
}

bindsym Mod1+tab exec $scripts/alttab.py next
bindsym Mod1+shift+tab $scripts/alttab.py prev

# }}}


# UI configuration {{{

default_border pixel 5px
client.focused #0087AF #0087AF #FFFFFF #00000000 #0087AF
client.unfocused #000000EE #EEEEEE #000000 #00000000 #00000000
smart_borders on

# }}}


bar {
    swaybar_command waybar
}


# Autorun {{{
exec mako --default-timeout 7000

exec dropbox
#exec sway-inact-win-transparency
exec blueman-applet
# }}}

# ~/.config/sway/config.d/zoom.us.conf
# 
# Zoom Meeting App
# 
# Default for all windows is non-floating.
# 
# For pop up notification windows that don't use notifications api
for_window [app_id="zoom" title="^zoom$"] border none, floating enable
# For specific Zoom windows
for_window [app_id="zoom" title="^(Zoom|About)$"] border pixel, floating enable
for_window [app_id="zoom" title="Settings"] floating enable, floating_minimum_size 960 x 700
# Open Zoom Meeting windows on a new workspace (a bit hacky)
for_window [app_id="zoom" title="Zoom Meeting(.*)?"] workspace next_on_output --create, move container to workspace current, floating disable, inhibit_idle open


include /etc/sway/config.d/*
